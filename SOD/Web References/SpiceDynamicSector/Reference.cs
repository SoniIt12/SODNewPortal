//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace SOD.SpiceDynamicSector {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IDynamicSectors", Namespace="http://tempuri.org/")]
    public partial class DynamicSectors : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOriginStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArrivalStationsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DynamicSectors() {
            this.Url = global::SOD.Properties.Settings.Default.SOD_SpiceDynamicSector_DynamicSectors;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOriginStationsCompletedEventHandler GetOriginStationsCompleted;
        
        /// <remarks/>
        public event GetArrivalStationsCompletedEventHandler GetArrivalStationsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDynamicSectors/GetOriginStations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SpiceJetDynamicSectors")]
        public OriginStations[] GetOriginStations([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("GetOriginStations", new object[] {
                        UserName,
                        Password});
            return ((OriginStations[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOriginStationsAsync(string UserName, string Password) {
            this.GetOriginStationsAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void GetOriginStationsAsync(string UserName, string Password, object userState) {
            if ((this.GetOriginStationsOperationCompleted == null)) {
                this.GetOriginStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOriginStationsOperationCompleted);
            }
            this.InvokeAsync("GetOriginStations", new object[] {
                        UserName,
                        Password}, this.GetOriginStationsOperationCompleted, userState);
        }
        
        private void OnGetOriginStationsOperationCompleted(object arg) {
            if ((this.GetOriginStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOriginStationsCompleted(this, new GetOriginStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDynamicSectors/GetArrivalStations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SpiceJetDynamicSectors")]
        public ArrivalStations[] GetArrivalStations([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DepartureStation) {
            object[] results = this.Invoke("GetArrivalStations", new object[] {
                        UserName,
                        Password,
                        DepartureStation});
            return ((ArrivalStations[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArrivalStationsAsync(string UserName, string Password, string DepartureStation) {
            this.GetArrivalStationsAsync(UserName, Password, DepartureStation, null);
        }
        
        /// <remarks/>
        public void GetArrivalStationsAsync(string UserName, string Password, string DepartureStation, object userState) {
            if ((this.GetArrivalStationsOperationCompleted == null)) {
                this.GetArrivalStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArrivalStationsOperationCompleted);
            }
            this.InvokeAsync("GetArrivalStations", new object[] {
                        UserName,
                        Password,
                        DepartureStation}, this.GetArrivalStationsOperationCompleted, userState);
        }
        
        private void OnGetArrivalStationsOperationCompleted(object arg) {
            if ((this.GetArrivalStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArrivalStationsCompleted(this, new GetArrivalStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SpiceJetDynamicSectors")]
    public partial class OriginStations {
        
        private string cityCodeField;
        
        private int interlineField;
        
        private bool interlineFieldSpecified;
        
        private string originField;
        
        private string stationTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Interline {
            get {
                return this.interlineField;
            }
            set {
                this.interlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlineSpecified {
            get {
                return this.interlineFieldSpecified;
            }
            set {
                this.interlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StationType {
            get {
                return this.stationTypeField;
            }
            set {
                this.stationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SpiceJetDynamicSectors")]
    public partial class ArrivalStations {
        
        private string arrivalStationNameField;
        
        private string departureStationNameField;
        
        private int domesticFlagField;
        
        private bool domesticFlagFieldSpecified;
        
        private int interlineField;
        
        private bool interlineFieldSpecified;
        
        private int internationalFlagField;
        
        private bool internationalFlagFieldSpecified;
        
        private string journeyArrivalStationField;
        
        private string journeyDepartureStationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ArrivalStationName {
            get {
                return this.arrivalStationNameField;
            }
            set {
                this.arrivalStationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DepartureStationName {
            get {
                return this.departureStationNameField;
            }
            set {
                this.departureStationNameField = value;
            }
        }
        
        /// <remarks/>
        public int DomesticFlag {
            get {
                return this.domesticFlagField;
            }
            set {
                this.domesticFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DomesticFlagSpecified {
            get {
                return this.domesticFlagFieldSpecified;
            }
            set {
                this.domesticFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Interline {
            get {
                return this.interlineField;
            }
            set {
                this.interlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterlineSpecified {
            get {
                return this.interlineFieldSpecified;
            }
            set {
                this.interlineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int InternationalFlag {
            get {
                return this.internationalFlagField;
            }
            set {
                this.internationalFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InternationalFlagSpecified {
            get {
                return this.internationalFlagFieldSpecified;
            }
            set {
                this.internationalFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string JourneyArrivalStation {
            get {
                return this.journeyArrivalStationField;
            }
            set {
                this.journeyArrivalStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string JourneyDepartureStation {
            get {
                return this.journeyDepartureStationField;
            }
            set {
                this.journeyDepartureStationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOriginStationsCompletedEventHandler(object sender, GetOriginStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOriginStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOriginStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OriginStations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OriginStations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetArrivalStationsCompletedEventHandler(object sender, GetArrivalStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArrivalStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArrivalStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArrivalStations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArrivalStations[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591